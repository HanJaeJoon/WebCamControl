@using System.Diagnostics
@model WebCameraControl.Models.IndexModel

@{
    Layout = "_Layout";

    int width = Debugger.IsAttached ? 1080 : 720;
    int height = Debugger.IsAttached ? 720 : 1080;
}


<div id="guide-area" class="d-flex flex-column min-vh-100 p-5">
    <span id="timer" class="text-end" data-set-timer-second="60">&nbsp;</span>
    <div class="d-flex flex-column vh-100 p-5">
        <span id="title" class="w-auto me-auto mt-1 mb-5">STEPS<span class="emoji clock m-1 display-1" role="img" aria-label="clock"></span></span>
        <span class="w-auto me-auto colored-intro">1. Take 8 photos</span>
        <span class="w-auto me-auto black-intro mb-5">5 seconds preparation time every shot</span>
        <span class="w-auto me-auto colored-intro">2. Pick 4 photos</span>
        <span class="w-auto me-auto black-intro mb-5">Arrange the photo order as well</span>
        <span class="w-auto me-auto colored-intro">3. Select photo style</span>
        <span class="w-auto me-auto black-intro mb-5">Photo filter and frame type</span>
        <div class="fixed-bottom px-5 pb-5">
            <button type="button" id="btn-next" class="btn btn-secondary btn-lg mx-auto mt-5">
                Okay, I got it &#8594;
            </button>
            <div class="mx-auto mt-2 mb-5 text-center">
                <a href="/" class="text-black">< Go back to first</a>
            </div>
        </div>
    </div>
</div>


<div id="take-picture-area" class="d-flex flex-column">
    <div id="camera-preview">
        <video playsinline="playsinline"></video>
    </div>

    <span id="camera-counter" class="w-auto me-auto ms-3"><span id="camera-current">1</span>/8</span>
    <span id="camera-timer" class="w-auto mx-auto">Ready?</span>
</div>


<script src="~/lib/webcam/webcam.js"></script>
<script type="text/javascript">
    const variables = {
        CameraManufacturer: '@Model.CameraManufacturer',
    };

    const windowInnerWidth = window.innerWidth;
    const windowInnerHeight = window.innerHeight;
    let current = 1;

    // 카운트 다운 배경음 로드
    var shutter = new Audio();
    shutter.src = 'images/countdown.mp3';

    document.addEventListener('DOMContentLoaded', async () => {
        const btnNext = document.querySelector('#btn-next');
        const timerSpan = document.querySelector('#timer');

        const goNext = () => {
            initTimer();
            document.querySelector('#guide-area').classList.add('d-none');
            document.querySelector('#take-picture-area').classList.remove('d-none');
            shutter.play();
            shutter.pause();

            navigator.mediaDevices?.enumerateDevices()
                .then(devices => {
                    let webcamOption = null;

                    for (let i = 0; i < devices.length; i++) {
                        const device = devices[i];

                        if (device?.kind !== 'videoinput') {
                            continue;
                        }

                        if (device.label?.toLowerCase()?.includes(variables.CameraManufacturer) || !webcamOption) {
                            webcamOption = {
                                width: windowInnerWidth,
                                height: windowInnerHeight,
                                image_format: 'jpeg',
                                jpeg_quality: 100,
                                deviceId: { exact: device.deviceId, },
                                flip_horiz: true,

                                // device capture size
                                dest_width: windowInnerWidth / 2,
                                dest_height: windowInnerHeight / 2,
                            };
                        }
                    }

                    Webcam.set(webcamOption);
                    Webcam.attach('#camera-preview');

                })
                .catch(err => {
                    console.log(err);
                });
        };

        startTimer(timerSpan, goNext);
        btnNext.addEventListener('click', goNext);

        const totalCount = 8;
        const currentSpan = document.querySelector('#camera-current');
        const cameraTimerSpan = $("#camera-timer");
        const pictureUriList = [];

        // 테스트 용도로 마우스 클릭시마다 사진 찍히도록 추가함.
        document.addEventListener('click', (event) => {
            if (current >= 2) {
                if (current < totalCount) {
                    current++;

                    currentSpan.innerText = `${current}`;

                    Webcam.snap((uri) => {
                        pictureUriList.push(uri);
                    });
                }
            }
        });


        const renderPictures = () => {
            document.querySelector('#take-picture-area').classList.add('d-none');

            for (let i = 0; i < pictureUriList.length; i++) {
                const pictureUri = pictureUriList[i];
                localStorage.setItem(`pick_image${i + 1}_src`, pictureUri);
            }

            window.location.href = '/pick-photo';
        }
    
        // 사진 찍기 타이머
        const initTimer = () => {
            let seconds;
            let timer = 6;

            // 카운트다운 시작
            let interval = setInterval(() => {
                seconds = timer;

                // 배경음 시작
                if (timer == 5) {
                   shutter.play();
                }

                let cameraEmojispan = $('<span />').attr('class', 'emoji camera').html('');
                cameraTimerSpan.empty().append(timer === 6 ? 'Ready?' :
                    timer === 0 ? cameraEmojispan :
                        seconds + '!');

                if (--timer < 0) {
                    current++;

                    currentSpan.innerText = `${current}`;

                    Webcam.snap((uri) => {
                        pictureUriList.push(uri);
                    });

                    clearInterval(interval);

                    if (current > totalCount) {
                        renderPictures();
                    } else {
                        initTimer();
                    }

                    // 배경음 종료
                    shutter.pause();
                }
            }, 1_000);
        }

    });
</script>
